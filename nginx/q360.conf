# Q360 Platform - Nginx Production Configuration
# SSL/HTTPS, Security Headers, Rate Limiting

upstream q360_app {
    server unix:/run/gunicorn/q360.sock fail_timeout=0;
    # Or use TCP: server 127.0.0.1:8000;
}

# Rate Limiting Zones
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/m;

# Connection Limiting
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name q360.example.com www.q360.example.com;

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name q360.example.com www.q360.example.com;

    # SSL Certificates (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/q360.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/q360.example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/q360.example.com/chain.pem;

    # SSL Configuration - Mozilla Intermediate (2024)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    # SSL Session
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://code.jquery.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data: https:; font-src 'self' data: https://cdn.jsdelivr.net; connect-src 'self' wss://q360.example.com; frame-ancestors 'none';" always;

    # Logs
    access_log /var/log/nginx/q360_access.log;
    error_log /var/log/nginx/q360_error.log warn;

    # Max file upload size
    client_max_body_size 20M;
    client_body_timeout 60s;

    # Root directory
    root /var/www/q360;

    # Connection limit
    limit_conn conn_limit 10;

    # Static files
    location /static/ {
        alias /var/www/q360/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;

        # Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/css text/javascript application/javascript application/json image/svg+xml;
    }

    # Media files
    location /media/ {
        alias /var/www/q360/media/;
        expires 7d;
        add_header Cache-Control "public";
        access_log off;

        # Secure media files
        internal;  # Only accessible via X-Accel-Redirect from Django
    }

    # Login endpoint - strict rate limiting
    location ~ ^/(accounts/login|api/token) {
        limit_req zone=login_limit burst=3 nodelay;
        limit_req_status 429;

        proxy_pass http://q360_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API endpoints - moderate rate limiting
    location /api/ {
        limit_req zone=api_limit burst=30 nodelay;
        limit_req_status 429;

        proxy_pass http://q360_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket support
    location /ws/ {
        proxy_pass http://q360_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # WebSocket timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Main application - general rate limiting
    location / {
        limit_req zone=general_limit burst=50 nodelay;
        limit_req_status 429;

        proxy_pass http://q360_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint (no rate limiting)
    location /health/ {
        access_log off;
        proxy_pass http://q360_app;
        proxy_set_header Host $host;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 429 /429.html;
    location = /429.html {
        root /var/www/q360/error_pages;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/q360/error_pages;
        internal;
    }
}
