# Generated by Django 4.2.23 on 2025-10-16 07:36

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("departments", "0011_department_departments_department_tref4ab"),
        ("development_plans", "0005_remove_is_approved_field"),
    ]

    operations = [
        migrations.CreateModel(
            name="KPI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="KPI Adı")),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="KPI Kodu"
                    ),
                ),
                ("unit", models.CharField(max_length=50, verbose_name="Ölçü Vahidi")),
                (
                    "target_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Hədəf Dəyər"
                    ),
                ),
                (
                    "measurement_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Gündəlik"),
                            ("weekly", "Həftəlik"),
                            ("monthly", "Aylıq"),
                            ("quarterly", "Rüblük"),
                            ("annual", "İllik"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Ölçmə Tezliyi",
                    ),
                ),
                (
                    "red_threshold",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Qırmızı Həddi"
                    ),
                ),
                (
                    "yellow_threshold",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Sarı Həddi"
                    ),
                ),
                (
                    "green_threshold",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Yaşıl Həddi"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="kpis",
                        to="departments.department",
                        verbose_name="Şöbə",
                    ),
                ),
            ],
            options={
                "verbose_name": "KPI",
                "verbose_name_plural": "KPI-lər",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="StrategicObjective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300, verbose_name="Məqsəd")),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("organization", "Təşkilat"),
                            ("department", "Şöbə"),
                            ("individual", "Fərdi"),
                        ],
                        default="organization",
                        max_length=20,
                        verbose_name="Səviyyə",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Qaralama"),
                            ("active", "Aktiv"),
                            ("completed", "Tamamlanmış"),
                            ("cancelled", "Ləğv Edilmiş"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("fiscal_year", models.IntegerField(verbose_name="Maliyyə İli")),
                (
                    "quarter",
                    models.CharField(
                        choices=[
                            ("Q1", "1-ci Rüb"),
                            ("Q2", "2-ci Rüb"),
                            ("Q3", "3-cü Rüb"),
                            ("Q4", "4-cü Rüb"),
                            ("annual", "İllik"),
                        ],
                        default="annual",
                        max_length=10,
                        verbose_name="Rüb",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlanğıc Tarixi")),
                ("end_date", models.DateField(verbose_name="Bitmə Tarixi")),
                (
                    "progress_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                        verbose_name="İrəliləyiş %",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                        verbose_name="Çəki %",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_objectives",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="objectives",
                        to="departments.department",
                        verbose_name="Şöbə",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_objectives",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Məsul Şəxs",
                    ),
                ),
                (
                    "parent_objective",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_objectives",
                        to="development_plans.strategicobjective",
                        verbose_name="Əsas Məqsəd",
                    ),
                ),
            ],
            options={
                "verbose_name": "Strateji Məqsəd",
                "verbose_name_plural": "Strateji Məqsədlər",
                "ordering": ["-fiscal_year", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="KPIMeasurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("measurement_date", models.DateField(verbose_name="Ölçmə Tarixi")),
                (
                    "actual_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Faktiki Dəyər"
                    ),
                ),
                (
                    "trend",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("up", "Yuxarı"),
                            ("down", "Aşağı"),
                            ("stable", "Sabit"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Tendensiya",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "kpi",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measurements",
                        to="development_plans.kpi",
                        verbose_name="KPI",
                    ),
                ),
                (
                    "measured_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="kpi_measurements",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ölçən",
                    ),
                ),
            ],
            options={
                "verbose_name": "KPI Ölçməsi",
                "verbose_name_plural": "KPI Ölçmələri",
                "ordering": ["-measurement_date"],
            },
        ),
        migrations.AddField(
            model_name="kpi",
            name="objective",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="kpis",
                to="development_plans.strategicobjective",
                verbose_name="Strateji Məqsəd",
            ),
        ),
        migrations.AddField(
            model_name="kpi",
            name="owner",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="owned_kpis",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Məsul Şəxs",
            ),
        ),
        migrations.CreateModel(
            name="KeyResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300, verbose_name="Açar Nəticə")),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("number", "Ədəd"),
                            ("percentage", "Faiz"),
                            ("currency", "Valyuta"),
                            ("boolean", "Hə/Yox"),
                        ],
                        default="number",
                        max_length=20,
                        verbose_name="Ölçü Vahidi",
                    ),
                ),
                (
                    "baseline_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="Başlanğıc Dəyər",
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Hədəf Dəyər",
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="Cari Dəyər",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                        verbose_name="Çəki %",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "objective",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="key_results",
                        to="development_plans.strategicobjective",
                        verbose_name="Məqsəd",
                    ),
                ),
            ],
            options={
                "verbose_name": "Açar Nəticə",
                "verbose_name_plural": "Açar Nəticələr",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalStrategicObjective",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=300, verbose_name="Məqsəd")),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("organization", "Təşkilat"),
                            ("department", "Şöbə"),
                            ("individual", "Fərdi"),
                        ],
                        default="organization",
                        max_length=20,
                        verbose_name="Səviyyə",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Qaralama"),
                            ("active", "Aktiv"),
                            ("completed", "Tamamlanmış"),
                            ("cancelled", "Ləğv Edilmiş"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("fiscal_year", models.IntegerField(verbose_name="Maliyyə İli")),
                (
                    "quarter",
                    models.CharField(
                        choices=[
                            ("Q1", "1-ci Rüb"),
                            ("Q2", "2-ci Rüb"),
                            ("Q3", "3-cü Rüb"),
                            ("Q4", "4-cü Rüb"),
                            ("annual", "İllik"),
                        ],
                        default="annual",
                        max_length=10,
                        verbose_name="Rüb",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlanğıc Tarixi")),
                ("end_date", models.DateField(verbose_name="Bitmə Tarixi")),
                (
                    "progress_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                        verbose_name="İrəliləyiş %",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                        verbose_name="Çəki %",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="departments.department",
                        verbose_name="Şöbə",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Məsul Şəxs",
                    ),
                ),
                (
                    "parent_objective",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="development_plans.strategicobjective",
                        verbose_name="Əsas Məqsəd",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Strateji Məqsəd",
                "verbose_name_plural": "historical Strateji Məqsədlər",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalKPIMeasurement",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("measurement_date", models.DateField(verbose_name="Ölçmə Tarixi")),
                (
                    "actual_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Faktiki Dəyər"
                    ),
                ),
                (
                    "trend",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("up", "Yuxarı"),
                            ("down", "Aşağı"),
                            ("stable", "Sabit"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Tendensiya",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "kpi",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="development_plans.kpi",
                        verbose_name="KPI",
                    ),
                ),
                (
                    "measured_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ölçən",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical KPI Ölçməsi",
                "verbose_name_plural": "historical KPI Ölçmələri",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalKPI",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="KPI Adı")),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                (
                    "code",
                    models.CharField(
                        db_index=True, max_length=50, verbose_name="KPI Kodu"
                    ),
                ),
                ("unit", models.CharField(max_length=50, verbose_name="Ölçü Vahidi")),
                (
                    "target_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Hədəf Dəyər"
                    ),
                ),
                (
                    "measurement_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Gündəlik"),
                            ("weekly", "Həftəlik"),
                            ("monthly", "Aylıq"),
                            ("quarterly", "Rüblük"),
                            ("annual", "İllik"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Ölçmə Tezliyi",
                    ),
                ),
                (
                    "red_threshold",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Qırmızı Həddi"
                    ),
                ),
                (
                    "yellow_threshold",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Sarı Həddi"
                    ),
                ),
                (
                    "green_threshold",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Yaşıl Həddi"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="departments.department",
                        verbose_name="Şöbə",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "objective",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="development_plans.strategicobjective",
                        verbose_name="Strateji Məqsəd",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Məsul Şəxs",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical KPI",
                "verbose_name_plural": "historical KPI-lər",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalKeyResult",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=300, verbose_name="Açar Nəticə")),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("number", "Ədəd"),
                            ("percentage", "Faiz"),
                            ("currency", "Valyuta"),
                            ("boolean", "Hə/Yox"),
                        ],
                        default="number",
                        max_length=20,
                        verbose_name="Ölçü Vahidi",
                    ),
                ),
                (
                    "baseline_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="Başlanğıc Dəyər",
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Hədəf Dəyər",
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=15,
                        verbose_name="Cari Dəyər",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("100.00"),
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                        verbose_name="Çəki %",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "objective",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="development_plans.strategicobjective",
                        verbose_name="Məqsəd",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Açar Nəticə",
                "verbose_name_plural": "historical Açar Nəticələr",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddIndex(
            model_name="strategicobjective",
            index=models.Index(
                fields=["level", "status"], name="development_level_651246_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="strategicobjective",
            index=models.Index(
                fields=["fiscal_year", "quarter"], name="development_fiscal__3ad16b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="strategicobjective",
            index=models.Index(fields=["owner"], name="development_owner_i_0128fd_idx"),
        ),
        migrations.AddIndex(
            model_name="strategicobjective",
            index=models.Index(
                fields=["department"], name="development_departm_0a7ede_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="kpimeasurement",
            index=models.Index(
                fields=["kpi", "measurement_date"], name="development_kpi_id_3ecf3c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="kpimeasurement",
            unique_together={("kpi", "measurement_date")},
        ),
        migrations.AddIndex(
            model_name="kpi",
            index=models.Index(fields=["owner"], name="development_owner_i_9bb0f9_idx"),
        ),
        migrations.AddIndex(
            model_name="kpi",
            index=models.Index(
                fields=["department"], name="development_departm_fe7211_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="kpi",
            index=models.Index(
                fields=["is_active"], name="development_is_acti_e2fc1a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="keyresult",
            index=models.Index(
                fields=["objective"], name="development_objecti_812853_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="keyresult",
            index=models.Index(
                fields=["is_active"], name="development_is_acti_acdb1e_idx"
            ),
        ),
    ]
