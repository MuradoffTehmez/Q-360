# Generated by Django 5.1.4 on 2025-10-19 09:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        (
            "notifications",
            "0003_notificationmethod_smsprovider_notification_channel_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SMSNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipient_phone",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{7,15}$",
                                "Telefon nömrəsi +994xxxxxxxxx formatında olmalıdır",
                            )
                        ],
                        verbose_name="Telefon Nömrəsi",
                    ),
                ),
                ("message", models.TextField(verbose_name="Mesaj")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Növbədə"),
                            ("sending", "Göndərilir"),
                            ("sent", "Göndərildi"),
                            ("failed", "Uğursuz"),
                        ],
                        default="queued",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="Metadata"),
                ),
                (
                    "scheduled_for",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Planlaşdırılan Vaxt"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Göndərilmə Vaxtı"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Xəta Mesajı"),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="Celery Tapşırıq ID-i"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "SMS Bildirişi",
                "verbose_name_plural": "SMS Bildirişləri",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="pushnotification",
            name="priority",
            field=models.CharField(
                choices=[("normal", "Normal"), ("high", "Yüksək")],
                default="normal",
                max_length=10,
                verbose_name="Prioritet",
            ),
        ),
        migrations.AddField(
            model_name="pushnotification",
            name="provider",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Təchizatçı"
            ),
        ),
        migrations.AddField(
            model_name="pushnotification",
            name="scheduled_for",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Planlaşdırılan Vaxt"
            ),
        ),
        migrations.AddField(
            model_name="pushnotification",
            name="task_id",
            field=models.CharField(
                blank=True, max_length=128, verbose_name="Celery Tapşırıq ID-i"
            ),
        ),
        migrations.AddField(
            model_name="pushnotification",
            name="topic",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Mövzu/Topic"
            ),
        ),
        migrations.AddField(
            model_name="pushnotification",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name="pushnotification",
            name="status",
            field=models.CharField(
                choices=[
                    ("queued", "Növbədə"),
                    ("sending", "Göndərilir"),
                    ("sent", "Göndərildi"),
                    ("failed", "Uğursuz"),
                ],
                default="queued",
                max_length=20,
                verbose_name="Status",
            ),
        ),
        migrations.CreateModel(
            name="EmailNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipient_email",
                    models.EmailField(max_length=254, verbose_name="E-poçt"),
                ),
                ("subject", models.CharField(max_length=255, verbose_name="Mövzu")),
                ("body", models.TextField(verbose_name="Məzmun")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Növbədə"),
                            ("sending", "Göndərilir"),
                            ("sent", "Göndərildi"),
                            ("failed", "Uğursuz"),
                        ],
                        default="queued",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Aşağı"),
                            ("normal", "Normal"),
                            ("high", "Yüksək"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Prioritet",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Təchizatçı"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="Metadata"),
                ),
                (
                    "scheduled_for",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Planlaşdırılan Vaxt"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Göndərilmə Vaxtı"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Xəta Mesajı"),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="Celery Tapşırıq ID-i"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "notification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="email_notifications",
                        to="notifications.notification",
                        verbose_name="Bildiriş",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="email_notification_records",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="email_notifications",
                        to="notifications.emailtemplate",
                        verbose_name="Şablon",
                    ),
                ),
            ],
            options={
                "verbose_name": "E-poçt Bildirişi",
                "verbose_name_plural": "E-poçt Bildirişləri",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("email", "E-poçt"),
                            ("sms", "SMS"),
                            ("push", "Push Bildirişi"),
                            ("in_app", "Tətbiqdaxili"),
                        ],
                        max_length=20,
                        verbose_name="Metod",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("assignment", "Tapşırıq"),
                            ("reminder", "Xatırlatma"),
                            ("announcement", "Elan"),
                            ("security", "Təhlükəsizlik"),
                            ("report", "Hesabat"),
                            ("system", "Sistem"),
                        ],
                        max_length=30,
                        verbose_name="Kateqoriya",
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Aktivdir")),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Sakitlik Başlama"
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Sakitlik Bitmə"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="Metadata"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="channel_preferences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bildiriş Parametri",
                "verbose_name_plural": "Bildiriş Parametrləri",
                "ordering": ["user", "method", "category"],
            },
        ),
        migrations.CreateModel(
            name="PushDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Cihaz Adı"
                    ),
                ),
                (
                    "device_token",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Cihaz Tokeni"
                    ),
                ),
                (
                    "device_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Cihaz ID"
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("ios", "iOS"),
                            ("android", "Android"),
                            ("web", "Veb"),
                        ],
                        max_length=20,
                        verbose_name="Platforma",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Aktivdir"),
                ),
                (
                    "last_seen_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Son Aktivlik"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="Metadata"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="push_devices",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Push Cihazı",
                "verbose_name_plural": "Push Cihazları",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.AddField(
            model_name="pushnotification",
            name="device",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="push_notifications",
                to="notifications.pushdevice",
                verbose_name="Cihaz",
            ),
        ),
        migrations.AddIndex(
            model_name="pushnotification",
            index=models.Index(fields=["status"], name="notificatio_status_6537b5_idx"),
        ),
        migrations.AddIndex(
            model_name="pushnotification",
            index=models.Index(
                fields=["user", "status"], name="notificatio_user_id_d076ac_idx"
            ),
        ),
        migrations.AddField(
            model_name="smsnotification",
            name="notification",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sms_deliveries",
                to="notifications.notification",
                verbose_name="Bildiriş",
            ),
        ),
        migrations.AddField(
            model_name="smsnotification",
            name="provider",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sms_deliveries",
                to="notifications.smsprovider",
                verbose_name="SMS Təchizatçısı",
            ),
        ),
        migrations.AddField(
            model_name="smsnotification",
            name="recipient",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sms_notification_entries",
                to=settings.AUTH_USER_MODEL,
                verbose_name="İstifadəçi",
            ),
        ),
        migrations.AddIndex(
            model_name="emailnotification",
            index=models.Index(fields=["status"], name="notificatio_status_533ae7_idx"),
        ),
        migrations.AddIndex(
            model_name="emailnotification",
            index=models.Index(
                fields=["scheduled_for"], name="notificatio_schedul_eb2753_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailnotification",
            index=models.Index(
                fields=["recipient_email"], name="notificatio_recipie_0939b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationpreference",
            index=models.Index(
                fields=["user", "method"], name="notificatio_user_id_58990e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificationpreference",
            index=models.Index(
                fields=["method", "category"], name="notificatio_method_281aac_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="notificationpreference",
            unique_together={("user", "method", "category")},
        ),
        migrations.AddIndex(
            model_name="smsnotification",
            index=models.Index(fields=["status"], name="notificatio_status_c4b476_idx"),
        ),
        migrations.AddIndex(
            model_name="smsnotification",
            index=models.Index(
                fields=["recipient_phone"], name="notificatio_recipie_a61b76_idx"
            ),
        ),
    ]
