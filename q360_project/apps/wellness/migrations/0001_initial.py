# Generated by Django 4.2.23 on 2025-10-22 10:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="WellnessChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Yarış Adı")),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "challenge_type",
                    models.CharField(
                        choices=[
                            ("steps", "Addım Yarışı"),
                            ("hydration", "Su İçmə Yarışı"),
                            ("meditation", "Meditasiya"),
                            ("sleep", "Yuxu Keyfiyyəti"),
                            ("nutrition", "Sağlam Qidalanma"),
                            ("exercise", "İdman Fəaliyyəti"),
                            ("weight_loss", "Çəki İtirmə"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Yarış Növü",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlama Tarixi")),
                ("end_date", models.DateField(verbose_name="Bitmə Tarixi")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Gələcək"),
                            ("active", "Aktiv"),
                            ("completed", "Tamamlanıb"),
                            ("cancelled", "Ləğv edilib"),
                        ],
                        default="upcoming",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("goal", models.CharField(max_length=200, verbose_name="Hədəf")),
                (
                    "prize",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Mükafat"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_challenges",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Wellness Yarışı",
                "verbose_name_plural": "Wellness Yarışları",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="WellnessChallengeParticipation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "joined_date",
                    models.DateField(auto_now_add=True, verbose_name="Qoşulma Tarixi"),
                ),
                (
                    "progress",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="İrəliləyiş (%)",
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Cari Dəyər",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "completed",
                    models.BooleanField(default=False, verbose_name="Tamamlanıb"),
                ),
                (
                    "completion_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Tamamlanma Tarixi"
                    ),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participations",
                        to="wellness.wellnesschallenge",
                        verbose_name="Yarış",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenge_participations",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İştirakçı",
                    ),
                ),
            ],
            options={
                "verbose_name": "Yarış İştirakı",
                "verbose_name_plural": "Yarış İştirakları",
                "ordering": ["-progress", "-current_value"],
                "unique_together": {("challenge", "participant")},
            },
        ),
        migrations.AddField(
            model_name="wellnesschallenge",
            name="participants",
            field=models.ManyToManyField(
                related_name="wellness_challenges",
                through="wellness.WellnessChallengeParticipation",
                to=settings.AUTH_USER_MODEL,
                verbose_name="İştirakçılar",
            ),
        ),
        migrations.CreateModel(
            name="MentalHealthSurvey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "survey_date",
                    models.DateField(auto_now_add=True, verbose_name="Survey Tarixi"),
                ),
                (
                    "stress_level",
                    models.IntegerField(
                        choices=[
                            (1, "Çox Aşağı"),
                            (2, "Aşağı"),
                            (3, "Orta"),
                            (4, "Yüksək"),
                            (5, "Çox Yüksək"),
                        ],
                        verbose_name="Stress Səviyyəsi",
                    ),
                ),
                (
                    "workload_satisfaction",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="İş Yükü Məmnuniyyəti (1-5)",
                    ),
                ),
                (
                    "work_life_balance",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="İş-Həyat Balansı (1-5)",
                    ),
                ),
                (
                    "sleep_quality",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Yuxu Keyfiyyəti (1-5)",
                    ),
                ),
                (
                    "anxiety_level",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Narahatlıq Səviyyəsi (1-5)",
                    ),
                ),
                (
                    "seeking_support",
                    models.BooleanField(default=False, verbose_name="Dəstək Axtarır"),
                ),
                ("comments", models.TextField(blank=True, verbose_name="Şərhlər")),
                (
                    "is_anonymous",
                    models.BooleanField(default=True, verbose_name="Anonim Survey"),
                ),
                (
                    "follow_up_required",
                    models.BooleanField(
                        default=False, verbose_name="Növbəti Addım Tələb olunur"
                    ),
                ),
                (
                    "follow_up_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Növbəti Addım Tarixi"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mental_health_surveys",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mental Sağlamlıq Survey",
                "verbose_name_plural": "Mental Sağlamlıq Survey-ləri",
                "ordering": ["-survey_date"],
            },
        ),
        migrations.CreateModel(
            name="MedicalClaim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "claim_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Konsultasiya"),
                            ("medication", "Dərman"),
                            ("hospitalization", "Xəstəxana"),
                            ("surgery", "Əməliyyat"),
                            ("dental", "Diş Müalicəsi"),
                            ("vision", "Göz Müalicəsi"),
                            ("physical_therapy", "Fiziki Terapiya"),
                            ("mental_health", "Mental Sağlamlıq"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Tələb Növü",
                    ),
                ),
                ("claim_date", models.DateField(verbose_name="Tələb Tarixi")),
                ("treatment_date", models.DateField(verbose_name="Müalicə Tarixi")),
                (
                    "provider",
                    models.CharField(
                        max_length=200, verbose_name="Tibbi Xidmət Təminatçısı"
                    ),
                ),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "amount_claimed",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Tələb Edilən Məbləğ",
                    ),
                ),
                (
                    "amount_approved",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Təsdiq Edilən Məbləğ",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Gözləmədə"),
                            ("approved", "Təsdiq edilib"),
                            ("rejected", "Rədd edilib"),
                            ("paid", "Ödənilib"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "receipt_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="medical_claims/receipts/",
                        verbose_name="Qəbz Faylı",
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="Rədd Səbəbi"),
                ),
                (
                    "reviewed_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Nəzərdən Keçirmə Tarixi"
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Ödəniş Tarixi"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_claims",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_medical_claims",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Nəzərdən Keçirən",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tibbi Xərc Tələbi",
                "verbose_name_plural": "Tibbi Xərc Tələbləri",
                "ordering": ["-claim_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalWellnessChallenge",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Yarış Adı")),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "challenge_type",
                    models.CharField(
                        choices=[
                            ("steps", "Addım Yarışı"),
                            ("hydration", "Su İçmə Yarışı"),
                            ("meditation", "Meditasiya"),
                            ("sleep", "Yuxu Keyfiyyəti"),
                            ("nutrition", "Sağlam Qidalanma"),
                            ("exercise", "İdman Fəaliyyəti"),
                            ("weight_loss", "Çəki İtirmə"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Yarış Növü",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlama Tarixi")),
                ("end_date", models.DateField(verbose_name="Bitmə Tarixi")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Gələcək"),
                            ("active", "Aktiv"),
                            ("completed", "Tamamlanıb"),
                            ("cancelled", "Ləğv edilib"),
                        ],
                        default="upcoming",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("goal", models.CharField(max_length=200, verbose_name="Hədəf")),
                (
                    "prize",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Mükafat"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Wellness Yarışı",
                "verbose_name_plural": "historical Wellness Yarışları",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMentalHealthSurvey",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "survey_date",
                    models.DateField(
                        blank=True, editable=False, verbose_name="Survey Tarixi"
                    ),
                ),
                (
                    "stress_level",
                    models.IntegerField(
                        choices=[
                            (1, "Çox Aşağı"),
                            (2, "Aşağı"),
                            (3, "Orta"),
                            (4, "Yüksək"),
                            (5, "Çox Yüksək"),
                        ],
                        verbose_name="Stress Səviyyəsi",
                    ),
                ),
                (
                    "workload_satisfaction",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="İş Yükü Məmnuniyyəti (1-5)",
                    ),
                ),
                (
                    "work_life_balance",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="İş-Həyat Balansı (1-5)",
                    ),
                ),
                (
                    "sleep_quality",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Yuxu Keyfiyyəti (1-5)",
                    ),
                ),
                (
                    "anxiety_level",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Narahatlıq Səviyyəsi (1-5)",
                    ),
                ),
                (
                    "seeking_support",
                    models.BooleanField(default=False, verbose_name="Dəstək Axtarır"),
                ),
                ("comments", models.TextField(blank=True, verbose_name="Şərhlər")),
                (
                    "is_anonymous",
                    models.BooleanField(default=True, verbose_name="Anonim Survey"),
                ),
                (
                    "follow_up_required",
                    models.BooleanField(
                        default=False, verbose_name="Növbəti Addım Tələb olunur"
                    ),
                ),
                (
                    "follow_up_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Növbəti Addım Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Mental Sağlamlıq Survey",
                "verbose_name_plural": "historical Mental Sağlamlıq Survey-ləri",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMedicalClaim",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "claim_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Konsultasiya"),
                            ("medication", "Dərman"),
                            ("hospitalization", "Xəstəxana"),
                            ("surgery", "Əməliyyat"),
                            ("dental", "Diş Müalicəsi"),
                            ("vision", "Göz Müalicəsi"),
                            ("physical_therapy", "Fiziki Terapiya"),
                            ("mental_health", "Mental Sağlamlıq"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Tələb Növü",
                    ),
                ),
                ("claim_date", models.DateField(verbose_name="Tələb Tarixi")),
                ("treatment_date", models.DateField(verbose_name="Müalicə Tarixi")),
                (
                    "provider",
                    models.CharField(
                        max_length=200, verbose_name="Tibbi Xidmət Təminatçısı"
                    ),
                ),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "amount_claimed",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="Tələb Edilən Məbləğ",
                    ),
                ),
                (
                    "amount_approved",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Təsdiq Edilən Məbləğ",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Gözləmədə"),
                            ("approved", "Təsdiq edilib"),
                            ("rejected", "Rədd edilib"),
                            ("paid", "Ödənilib"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "receipt_file",
                    models.TextField(
                        blank=True, max_length=100, null=True, verbose_name="Qəbz Faylı"
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="Rədd Səbəbi"),
                ),
                (
                    "reviewed_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Nəzərdən Keçirmə Tarixi"
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Ödəniş Tarixi"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Nəzərdən Keçirən",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Tibbi Xərc Tələbi",
                "verbose_name_plural": "historical Tibbi Xərc Tələbləri",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalHealthScore",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "score_date",
                    models.DateField(
                        blank=True, editable=False, verbose_name="Skor Tarixi"
                    ),
                ),
                (
                    "overall_score",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Ümumi Skor (0-100)",
                    ),
                ),
                (
                    "physical_health",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Fiziki Sağlamlıq",
                    ),
                ),
                (
                    "mental_health",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Mental Sağlamlıq",
                    ),
                ),
                (
                    "activity_level",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Aktivlik Səviyyəsi",
                    ),
                ),
                (
                    "nutrition_score",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Qidalanma Skoru",
                    ),
                ),
                (
                    "sleep_quality",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Yuxu Keyfiyyəti",
                    ),
                ),
                (
                    "bmi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="BMI (Bədən Kütlə İndeksi)",
                    ),
                ),
                (
                    "steps_per_day_avg",
                    models.IntegerField(
                        default=0, verbose_name="Gündəlik Ortalama Addım"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Sağlamlıq Skoru",
                "verbose_name_plural": "historical Sağlamlıq Skorları",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalHealthCheckup",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "checkup_type",
                    models.CharField(
                        choices=[
                            ("general", "Ümumi Müayinə"),
                            ("dental", "Diş Müayinəsi"),
                            ("vision", "Göz Müayinəsi"),
                            ("blood_test", "Qan Testi"),
                            ("cardiology", "Kardioloji Müayinə"),
                            ("annual", "İllik Müayinə"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Müayinə Növü",
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateTimeField(verbose_name="Planlaşdırılmış Tarix"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Planlaşdırılıb"),
                            ("completed", "Tamamlanıb"),
                            ("cancelled", "Ləğv edilib"),
                            ("missed", "Buraxılıb"),
                        ],
                        default="scheduled",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Tibbi Xidmət Təminatçısı",
                    ),
                ),
                (
                    "location",
                    models.CharField(blank=True, max_length=300, verbose_name="Yer"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                ("results", models.TextField(blank=True, verbose_name="Nəticələr")),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Tamamlanma Tarixi"
                    ),
                ),
                (
                    "reminder_sent",
                    models.BooleanField(
                        default=False, verbose_name="Xatırlatma Göndərilib"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Tibbi Müayinə",
                "verbose_name_plural": "historical Tibbi Müayinələr",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFitnessProgram",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Proqram Adı")),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "program_type",
                    models.CharField(
                        choices=[
                            ("gym", "Fitness Zalı"),
                            ("yoga", "Yoga"),
                            ("pilates", "Pilates"),
                            ("running", "Qaçış Qrupu"),
                            ("cycling", "Velosiped"),
                            ("swimming", "Üzgüçülük"),
                            ("team_sports", "Komanda İdmanı"),
                            ("wellness", "Wellness Proqramı"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Proqram Növü",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlama Tarixi")),
                ("end_date", models.DateField(verbose_name="Bitmə Tarixi")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Aktiv"),
                            ("upcoming", "Gələcək"),
                            ("completed", "Tamamlanıb"),
                            ("cancelled", "Ləğv edilib"),
                        ],
                        default="upcoming",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "capacity",
                    models.IntegerField(
                        default=20, verbose_name="Maksimum İştirakçı Sayı"
                    ),
                ),
                (
                    "instructor",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Təlimatçı"
                    ),
                ),
                ("location", models.CharField(max_length=300, verbose_name="Yer")),
                ("schedule", models.TextField(blank=True, verbose_name="Cədvəl")),
                (
                    "cost_per_person",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Nəfər Başı Qiymət",
                    ),
                ),
                (
                    "company_sponsored",
                    models.BooleanField(
                        default=True, verbose_name="Şirkət Tərəfindən Dəstəklənir"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Fitness Proqramı",
                "verbose_name_plural": "historical Fitness Proqramları",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HealthCheckup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "checkup_type",
                    models.CharField(
                        choices=[
                            ("general", "Ümumi Müayinə"),
                            ("dental", "Diş Müayinəsi"),
                            ("vision", "Göz Müayinəsi"),
                            ("blood_test", "Qan Testi"),
                            ("cardiology", "Kardioloji Müayinə"),
                            ("annual", "İllik Müayinə"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Müayinə Növü",
                    ),
                ),
                (
                    "scheduled_date",
                    models.DateTimeField(verbose_name="Planlaşdırılmış Tarix"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Planlaşdırılıb"),
                            ("completed", "Tamamlanıb"),
                            ("cancelled", "Ləğv edilib"),
                            ("missed", "Buraxılıb"),
                        ],
                        default="scheduled",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Tibbi Xidmət Təminatçısı",
                    ),
                ),
                (
                    "location",
                    models.CharField(blank=True, max_length=300, verbose_name="Yer"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                ("results", models.TextField(blank=True, verbose_name="Nəticələr")),
                (
                    "completed_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Tamamlanma Tarixi"
                    ),
                ),
                (
                    "reminder_sent",
                    models.BooleanField(
                        default=False, verbose_name="Xatırlatma Göndərilib"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_checkups",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tibbi Müayinə",
                "verbose_name_plural": "Tibbi Müayinələr",
                "ordering": ["-scheduled_date"],
            },
        ),
        migrations.CreateModel(
            name="FitnessProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Proqram Adı")),
                ("description", models.TextField(verbose_name="Təsvir")),
                (
                    "program_type",
                    models.CharField(
                        choices=[
                            ("gym", "Fitness Zalı"),
                            ("yoga", "Yoga"),
                            ("pilates", "Pilates"),
                            ("running", "Qaçış Qrupu"),
                            ("cycling", "Velosiped"),
                            ("swimming", "Üzgüçülük"),
                            ("team_sports", "Komanda İdmanı"),
                            ("wellness", "Wellness Proqramı"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Proqram Növü",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlama Tarixi")),
                ("end_date", models.DateField(verbose_name="Bitmə Tarixi")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Aktiv"),
                            ("upcoming", "Gələcək"),
                            ("completed", "Tamamlanıb"),
                            ("cancelled", "Ləğv edilib"),
                        ],
                        default="upcoming",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "capacity",
                    models.IntegerField(
                        default=20, verbose_name="Maksimum İştirakçı Sayı"
                    ),
                ),
                (
                    "instructor",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Təlimatçı"
                    ),
                ),
                ("location", models.CharField(max_length=300, verbose_name="Yer")),
                ("schedule", models.TextField(blank=True, verbose_name="Cədvəl")),
                (
                    "cost_per_person",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Nəfər Başı Qiymət",
                    ),
                ),
                (
                    "company_sponsored",
                    models.BooleanField(
                        default=True, verbose_name="Şirkət Tərəfindən Dəstəklənir"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "participants",
                    models.ManyToManyField(
                        blank=True,
                        related_name="fitness_programs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İştirakçılar",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fitness Proqramı",
                "verbose_name_plural": "Fitness Proqramları",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="StepTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tracking_date", models.DateField(verbose_name="Tarix")),
                (
                    "steps",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Addım Sayı",
                    ),
                ),
                (
                    "distance_km",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        verbose_name="Məsafə (km)",
                    ),
                ),
                (
                    "calories_burned",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Yandırılan Kalori",
                    ),
                ),
                (
                    "active_minutes",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Aktiv Dəqiqələr",
                    ),
                ),
                (
                    "data_source",
                    models.CharField(
                        default="manual", max_length=50, verbose_name="Məlumat Mənbəyi"
                    ),
                ),
                (
                    "synced_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Sinxronizasiya Tarixi"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="step_trackings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Addım İzləmə",
                "verbose_name_plural": "Addım İzləmələri",
                "ordering": ["-tracking_date"],
                "unique_together": {("employee", "tracking_date")},
            },
        ),
        migrations.CreateModel(
            name="HealthScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "score_date",
                    models.DateField(auto_now_add=True, verbose_name="Skor Tarixi"),
                ),
                (
                    "overall_score",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Ümumi Skor (0-100)",
                    ),
                ),
                (
                    "physical_health",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Fiziki Sağlamlıq",
                    ),
                ),
                (
                    "mental_health",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Mental Sağlamlıq",
                    ),
                ),
                (
                    "activity_level",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Aktivlik Səviyyəsi",
                    ),
                ),
                (
                    "nutrition_score",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Qidalanma Skoru",
                    ),
                ),
                (
                    "sleep_quality",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Yuxu Keyfiyyəti",
                    ),
                ),
                (
                    "bmi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="BMI (Bədən Kütlə İndeksi)",
                    ),
                ),
                (
                    "steps_per_day_avg",
                    models.IntegerField(
                        default=0, verbose_name="Gündəlik Ortalama Addım"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_scores",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İşçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sağlamlıq Skoru",
                "verbose_name_plural": "Sağlamlıq Skorları",
                "ordering": ["-score_date"],
                "unique_together": {("employee", "score_date")},
            },
        ),
    ]
