# Generated by Django 4.2.23 on 2025-10-19 00:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("evaluations", "0005_evaluationcampaign_weight_peer_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SentimentAnalysisSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enable_sentiment_analysis",
                    models.BooleanField(
                        default=True, verbose_name="Enable Sentiment Analysis"
                    ),
                ),
                (
                    "min_confidence_threshold",
                    models.FloatField(
                        default=0.7, verbose_name="Minimum Confidence Threshold"
                    ),
                ),
                (
                    "enable_negative_alerts",
                    models.BooleanField(
                        default=True, verbose_name="Enable Negative Sentiment Alerts"
                    ),
                ),
                (
                    "negative_sentiment_threshold",
                    models.FloatField(
                        default=0.3, verbose_name="Negative Sentiment Threshold"
                    ),
                ),
                (
                    "enable_slack_integration",
                    models.BooleanField(
                        default=False, verbose_name="Enable Slack Integration"
                    ),
                ),
                (
                    "slack_webhook_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Slack Webhook URL"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Sentiment Analysis Settings",
                "verbose_name_plural": "Sentiment Analysis Settings",
            },
        ),
        migrations.CreateModel(
            name="SentimentFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback_text", models.TextField(verbose_name="Feedback Text")),
                (
                    "sentiment_label",
                    models.CharField(
                        choices=[
                            ("positive", "Positive"),
                            ("neutral", "Neutral"),
                            ("negative", "Negative"),
                        ],
                        max_length=20,
                        verbose_name="Sentiment Label",
                    ),
                ),
                ("sentiment_score", models.FloatField(verbose_name="Sentiment Score")),
                ("confidence", models.FloatField(verbose_name="Confidence Score")),
                (
                    "is_resolved",
                    models.BooleanField(default=False, verbose_name="Is Resolved"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Resolved At"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "evaluation_response",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentiment_analysis",
                        to="evaluations.response",
                        verbose_name="Evaluation Response",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_feedback",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Resolved By",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentiment_feedback",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sentiment Feedback",
                "verbose_name_plural": "Sentiment Feedback",
                "ordering": ["-created_at"],
            },
        ),
    ]
