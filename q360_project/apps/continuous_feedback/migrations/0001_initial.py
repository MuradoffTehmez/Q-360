# Generated by Django 4.2.23 on 2025-10-14 22:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("competencies", "0002_competency_competencie_name_eac81b_idx_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="FeedbackTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="Ad"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Font Awesome icon class",
                        max_length=50,
                        verbose_name="İkon",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Aktivdir"),
                ),
                (
                    "usage_count",
                    models.IntegerField(default=0, verbose_name="İstifadə Sayı"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Rəy Etiketi",
                "verbose_name_plural": "Rəy Etiketləri",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PublicRecognition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "likes_count",
                    models.IntegerField(default=0, verbose_name="Bəyənmə Sayı"),
                ),
                (
                    "comments_count",
                    models.IntegerField(default=0, verbose_name="Şərh Sayı"),
                ),
                (
                    "views_count",
                    models.IntegerField(default=0, verbose_name="Baxış Sayı"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Xüsusi Seçilmiş"),
                ),
                (
                    "featured_until",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Seçilmə Müddəti"
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Dərc Tarixi"),
                ),
            ],
            options={
                "verbose_name": "İctimai Təqdir",
                "verbose_name_plural": "İctimai Təqdirlər",
                "ordering": ["-published_at"],
            },
        ),
        migrations.CreateModel(
            name="RecognitionComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField(verbose_name="Şərh")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "recognition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="continuous_feedback.publicrecognition",
                        verbose_name="Təqdir",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recognition_comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Təqdir Şərhi",
                "verbose_name_plural": "Təqdir Şərhləri",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuickFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("recognition", "Təşəkkür / Recognition"),
                            ("improvement", "Təklif / Improvement"),
                            ("general", "Ümumi"),
                        ],
                        max_length=20,
                        verbose_name="Rəy Tipi",
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("private", "Şəxsi"),
                            ("public", "İctimai"),
                            ("team", "Komanda"),
                        ],
                        default="private",
                        max_length=10,
                        verbose_name="Görünürlük",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Başlıq")),
                ("message", models.TextField(verbose_name="Mesaj")),
                (
                    "context",
                    models.CharField(
                        blank=True,
                        help_text="Məsələn: Layihə adı, tapşırıq və ya hadisə",
                        max_length=255,
                        verbose_name="Kontekst",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        blank=True,
                        help_text="1=Çox zəif, 5=Əla",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Qiymət (1-5)",
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        default=False,
                        help_text="Alan şəxs göndərəni görməyəcək",
                        verbose_name="Anonim",
                    ),
                ),
                ("is_read", models.BooleanField(default=False, verbose_name="Oxundu")),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Oxunma Vaxtı"
                    ),
                ),
                (
                    "recipient_response",
                    models.TextField(blank=True, verbose_name="Alanın Cavabı"),
                ),
                (
                    "responded_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Cavab Verilmə Vaxtı"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Vaxtı"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_flagged",
                    models.BooleanField(default=False, verbose_name="Bildirildi"),
                ),
                (
                    "flagged_reason",
                    models.TextField(blank=True, verbose_name="Bildirmə Səbəbi"),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_feedbacks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Alan",
                    ),
                ),
                (
                    "related_competency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_feedbacks",
                        to="competencies.competency",
                        verbose_name="Əlaqəli Kompetensiya",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_feedbacks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Göndərən",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        related_name="feedbacks",
                        to="continuous_feedback.feedbacktag",
                        verbose_name="Etiketlər",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tez Rəy",
                "verbose_name_plural": "Tez Rəylər",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="publicrecognition",
            name="feedback",
            field=models.OneToOneField(
                limit_choices_to={
                    "feedback_type": "recognition",
                    "visibility": "public",
                },
                on_delete=django.db.models.deletion.CASCADE,
                related_name="public_recognition",
                to="continuous_feedback.quickfeedback",
                verbose_name="Rəy",
            ),
        ),
        migrations.CreateModel(
            name="FeedbackBank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_feedbacks_received",
                    models.IntegerField(default=0, verbose_name="Alınan Ümumi Rəylər"),
                ),
                (
                    "total_recognitions",
                    models.IntegerField(default=0, verbose_name="Alınan Təşəkkürlər"),
                ),
                (
                    "total_improvements",
                    models.IntegerField(default=0, verbose_name="Alınan Təkliflər"),
                ),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Orta Qiymət",
                    ),
                ),
                (
                    "top_strengths",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Rəylərdə ən çox qeyd edilən kompetensiyalar",
                        verbose_name="Ən Çox Qeyd Edilən Güclü Tərəflər",
                    ),
                ),
                (
                    "top_improvement_areas",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Təkmilləşdirmə üçün ən çox qeyd edilən sahələr",
                        verbose_name="İnkişaf Sahələri",
                    ),
                ),
                (
                    "positive_sentiment_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Müsbət Sentiment Balı",
                    ),
                ),
                (
                    "last_feedback_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Son Rəy Tarixi"
                    ),
                ),
                (
                    "last_updated",
                    models.DateTimeField(auto_now=True, verbose_name="Son Yenilənmə"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_bank",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rəy Bankı",
                "verbose_name_plural": "Rəy Bankları",
            },
        ),
        migrations.CreateModel(
            name="RecognitionLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recognition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="continuous_feedback.publicrecognition",
                        verbose_name="Təqdir",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recognition_likes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Təqdir Bəyənməsi",
                "verbose_name_plural": "Təqdir Bəyənmələri",
                "ordering": ["-created_at"],
                "unique_together": {("recognition", "user")},
            },
        ),
        migrations.AddIndex(
            model_name="quickfeedback",
            index=models.Index(
                fields=["recipient", "-created_at"],
                name="continuous__recipie_10005f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="quickfeedback",
            index=models.Index(
                fields=["sender", "-created_at"], name="continuous__sender__34e568_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="quickfeedback",
            index=models.Index(
                fields=["feedback_type", "visibility"],
                name="continuous__feedbac_8a10f0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="publicrecognition",
            index=models.Index(
                fields=["-published_at"], name="continuous__publish_0dec65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="publicrecognition",
            index=models.Index(
                fields=["is_featured", "-published_at"],
                name="continuous__is_feat_f64722_idx",
            ),
        ),
    ]
