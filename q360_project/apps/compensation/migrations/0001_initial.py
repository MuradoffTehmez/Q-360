# Generated by Django 4.2.23 on 2025-10-16 07:30

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SalaryInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "base_salary",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Əsas Maaş",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("AZN", "Azərbaycan Manatı"),
                            ("USD", "ABŞ Dolları"),
                            ("EUR", "Avro"),
                        ],
                        default="AZN",
                        max_length=3,
                        verbose_name="Valyuta",
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("monthly", "Aylıq"),
                            ("biweekly", "İki həftədə bir"),
                            ("weekly", "Həftəlik"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Ödəniş Tezliyi",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(verbose_name="Qüvvəyə Minmə Tarixi"),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Bitmə Tarixi"
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Bank Adı"
                    ),
                ),
                (
                    "bank_account_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Bank Hesab Nömrəsi"
                    ),
                ),
                (
                    "swift_code",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="SWIFT Kodu"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="salary_updates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yeniləyən",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="salary_info",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maaş Məlumatı",
                "verbose_name_plural": "Maaş Məlumatları",
                "ordering": ["-effective_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalSalaryInformation",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "base_salary",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Əsas Maaş",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("AZN", "Azərbaycan Manatı"),
                            ("USD", "ABŞ Dolları"),
                            ("EUR", "Avro"),
                        ],
                        default="AZN",
                        max_length=3,
                        verbose_name="Valyuta",
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("monthly", "Aylıq"),
                            ("biweekly", "İki həftədə bir"),
                            ("weekly", "Həftəlik"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Ödəniş Tezliyi",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(verbose_name="Qüvvəyə Minmə Tarixi"),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Bitmə Tarixi"
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Bank Adı"
                    ),
                ),
                (
                    "bank_account_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Bank Hesab Nömrəsi"
                    ),
                ),
                (
                    "swift_code",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="SWIFT Kodu"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yeniləyən",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Maaş Məlumatı",
                "verbose_name_plural": "historical Maaş Məlumatları",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDeduction",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "deduction_type",
                    models.CharField(
                        choices=[
                            ("income_tax", "Gəlir Vergisi"),
                            ("social_insurance", "Sosial Sığorta"),
                            ("health_insurance", "Tibbi Sığorta"),
                            ("pension", "Pensiya Ayırması"),
                            ("unemployment_insurance", "İşsizlik Sığortası"),
                            ("loan_repayment", "Kredit Ödənişi"),
                            ("advance_payment", "Avans Ödənişi"),
                            ("garnishment", "Məhkəmə Qərarı"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Tutma Növü",
                    ),
                ),
                (
                    "calculation_method",
                    models.CharField(
                        choices=[("fixed", "Sabit Məbləğ"), ("percentage", "Faiz")],
                        default="percentage",
                        max_length=20,
                        verbose_name="Hesablama Metodu",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Məbləğ / Faiz",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlanğıc Tarixi")),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Bitmə Tarixi"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Tutma",
                "verbose_name_plural": "historical Tutmalar",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCompensationHistory",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "previous_salary",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Əvvəlki Maaş",
                    ),
                ),
                (
                    "new_salary",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Yeni Maaş",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "change_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Dəyişiklik Faizi",
                    ),
                ),
                (
                    "change_reason",
                    models.CharField(
                        choices=[
                            ("hire", "İşə Qəbul"),
                            ("promotion", "Tərtiqə"),
                            ("annual_increase", "İllik Artım"),
                            ("performance", "Performans Artımı"),
                            ("market_adjustment", "Bazar Uyğunlaşması"),
                            ("cost_of_living", "Yaşayış Xərci Artımı"),
                            ("demotion", "Vəzifə Aşağı Salınması"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Dəyişiklik Səbəbi",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(verbose_name="Qüvvəyə Minmə Tarixi"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Təsdiqləyən",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Kompensasiya Tarixçəsi",
                "verbose_name_plural": "historical Kompensasiya Tarixçələri",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBonus",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "bonus_type",
                    models.CharField(
                        choices=[
                            ("performance", "Performans Bonusu"),
                            ("annual", "İllik Bonus"),
                            ("project", "Layihə Bonusu"),
                            ("signing", "İmza Bonusu"),
                            ("retention", "Saxlanma Bonusu"),
                            ("referral", "İstinad Bonusu"),
                            ("holiday", "Bayram Bonusu"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Bonus Növü",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Məbləğ",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Gözləyir"),
                            ("approved", "Təsdiqləndi"),
                            ("paid", "Ödənildi"),
                            ("rejected", "Rədd Edildi"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Ödəniş Tarixi"
                    ),
                ),
                ("fiscal_year", models.IntegerField(verbose_name="Maliyyə İli")),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Təsdiq Tarixi"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Təsdiqləyən",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Bonus",
                "verbose_name_plural": "historical Bonuslar",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAllowance",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "allowance_type",
                    models.CharField(
                        choices=[
                            ("housing", "Mənzil Müavinəti"),
                            ("transportation", "Nəqliyyat Müavinəti"),
                            ("meal", "Yemək Müavinəti"),
                            ("mobile", "Mobil Telefon Müavinəti"),
                            ("education", "Təhsil Müavinəti"),
                            ("health", "Sağlamlıq Müavinəti"),
                            ("relocation", "Köçürmə Müavinəti"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Müavinət Növü",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Məbləğ",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("monthly", "Aylıq"),
                            ("quarterly", "Rüblük"),
                            ("annual", "İllik"),
                            ("one_time", "Birdəfəlik"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Ödəniş Tezliyi",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlanğıc Tarixi")),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Bitmə Tarixi"
                    ),
                ),
                (
                    "is_taxable",
                    models.BooleanField(
                        default=True, verbose_name="Vergiyə Cəlb Olunur"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Təsdiqləyən",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Müavinət",
                "verbose_name_plural": "historical Müavinətlər",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="CompensationHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "previous_salary",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Əvvəlki Maaş",
                    ),
                ),
                (
                    "new_salary",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Yeni Maaş",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "change_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Dəyişiklik Faizi",
                    ),
                ),
                (
                    "change_reason",
                    models.CharField(
                        choices=[
                            ("hire", "İşə Qəbul"),
                            ("promotion", "Tərtiqə"),
                            ("annual_increase", "İllik Artım"),
                            ("performance", "Performans Artımı"),
                            ("market_adjustment", "Bazar Uyğunlaşması"),
                            ("cost_of_living", "Yaşayış Xərci Artımı"),
                            ("demotion", "Vəzifə Aşağı Salınması"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Dəyişiklik Səbəbi",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(verbose_name="Qüvvəyə Minmə Tarixi"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Qeydlər")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_salary_changes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Təsdiqləyən",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_salary_changes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compensation_history",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Kompensasiya Tarixçəsi",
                "verbose_name_plural": "Kompensasiya Tarixçələri",
                "ordering": ["-effective_date"],
            },
        ),
        migrations.CreateModel(
            name="Deduction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "deduction_type",
                    models.CharField(
                        choices=[
                            ("income_tax", "Gəlir Vergisi"),
                            ("social_insurance", "Sosial Sığorta"),
                            ("health_insurance", "Tibbi Sığorta"),
                            ("pension", "Pensiya Ayırması"),
                            ("unemployment_insurance", "İşsizlik Sığortası"),
                            ("loan_repayment", "Kredit Ödənişi"),
                            ("advance_payment", "Avans Ödənişi"),
                            ("garnishment", "Məhkəmə Qərarı"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Tutma Növü",
                    ),
                ),
                (
                    "calculation_method",
                    models.CharField(
                        choices=[("fixed", "Sabit Məbləğ"), ("percentage", "Faiz")],
                        default="percentage",
                        max_length=20,
                        verbose_name="Hesablama Metodu",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Məbləğ / Faiz",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlanğıc Tarixi")),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Bitmə Tarixi"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deductions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tutma",
                "verbose_name_plural": "Tutmalar",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "deduction_type"],
                        name="compensatio_user_id_687bc8_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="compensatio_is_acti_e718a2_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Bonus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bonus_type",
                    models.CharField(
                        choices=[
                            ("performance", "Performans Bonusu"),
                            ("annual", "İllik Bonus"),
                            ("project", "Layihə Bonusu"),
                            ("signing", "İmza Bonusu"),
                            ("retention", "Saxlanma Bonusu"),
                            ("referral", "İstinad Bonusu"),
                            ("holiday", "Bayram Bonusu"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Bonus Növü",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Məbləğ",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Gözləyir"),
                            ("approved", "Təsdiqləndi"),
                            ("paid", "Ödənildi"),
                            ("rejected", "Rədd Edildi"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Ödəniş Tarixi"
                    ),
                ),
                ("fiscal_year", models.IntegerField(verbose_name="Maliyyə İli")),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                (
                    "approved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Təsdiq Tarixi"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_bonuses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Təsdiqləyən",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_bonuses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Yaradan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bonuses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bonus",
                "verbose_name_plural": "Bonuslar",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "fiscal_year"],
                        name="compensatio_user_id_c49a3d_idx",
                    ),
                    models.Index(
                        fields=["status"], name="compensatio_status_272ed9_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Allowance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allowance_type",
                    models.CharField(
                        choices=[
                            ("housing", "Mənzil Müavinəti"),
                            ("transportation", "Nəqliyyat Müavinəti"),
                            ("meal", "Yemək Müavinəti"),
                            ("mobile", "Mobil Telefon Müavinəti"),
                            ("education", "Təhsil Müavinəti"),
                            ("health", "Sağlamlıq Müavinəti"),
                            ("relocation", "Köçürmə Müavinəti"),
                            ("other", "Digər"),
                        ],
                        max_length=50,
                        verbose_name="Müavinət Növü",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Məbləğ",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="AZN", max_length=3, verbose_name="Valyuta"
                    ),
                ),
                (
                    "payment_frequency",
                    models.CharField(
                        choices=[
                            ("monthly", "Aylıq"),
                            ("quarterly", "Rüblük"),
                            ("annual", "İllik"),
                            ("one_time", "Birdəfəlik"),
                        ],
                        default="monthly",
                        max_length=20,
                        verbose_name="Ödəniş Tezliyi",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Başlanğıc Tarixi")),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Bitmə Tarixi"
                    ),
                ),
                (
                    "is_taxable",
                    models.BooleanField(
                        default=True, verbose_name="Vergiyə Cəlb Olunur"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Təsvir")),
                ("is_active", models.BooleanField(default=True, verbose_name="Aktiv")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Yaradılma Tarixi"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Yenilənmə Tarixi"
                    ),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_allowances",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Təsdiqləyən",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allowances",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="İstifadəçi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Müavinət",
                "verbose_name_plural": "Müavinətlər",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "allowance_type"],
                        name="compensatio_user_id_53d151_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="compensatio_is_acti_9d29db_idx"
                    ),
                ],
            },
        ),
    ]
