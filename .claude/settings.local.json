{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(rmdir:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(ls:*)",
      "Bash(dir:*)",
      "Bash(findstr:*)",
      "Bash(pip install:*)",
      "Bash(pip uninstall:*)",
      "Bash(python:*)",
      "Bash(python manage.py:*)",
      "Bash(python manage.py makemessages:*)",
      "Bash(python manage.py migrate:*)",
      "Bash(python manage.py createsuperuser:*)",
      "Bash(python manage.py runserver:*)",
      "Bash(python manage.py collectstatic:*)",
      "Bash(timeout:*)",
      "Bash(psql:*)",
      "Bash(mysql:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(git:*)",
      "Bash(npm:*)",
      "Bash(dotnet:*)",
      "Bash(node:*)",
      "Bash(powershell:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(netstat:*)",
      "Bash(ipconfig:*)",
      "Bash(ping:*)",
      "Bash(traceroute:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(tar:*)",
      "Bash(apt-get:*)",
      "Bash(choco:*)",
      "Bash(redis-cli:*)",
      "Bash(taskkill:*)",
      "Bash(Select-String -Pattern \"FAILED|OK|test_\" -Context 0,1)",
      "Bash(Select-String -Pattern \"FAILED|OK|ERROR|test_\" -Context 0,1)",
      "Bash(createdb:*)",
      "Bash(set PGPASSWORD=T3hmezSecure@2025:*)",
      "Bash(cmd /c \"set PGPASSWORD=T3hmezSecure@2025 && \"\"C:\\Program Files\\PostgreSQL\\17\\bin\\createdb.exe\"\" -U postgres -h localhost q360_db\")",
      "Bash(cmd /c:*)",
      "Read(//c/Program Files/PostgreSQL/17/data/**)",
      "Bash(set DB_HOST=127.0.0.1)",
      "Bash(set:*)",
      "Bash(Select-String -Pattern \"✓|✅|ERROR|Traceback\" -Context 0,1)",
      "Bash(find:*)",
      "Bash(for dir in dashboard evaluations training competencies development_plans notifications engagement wellness compensation leave_attendance recruitment)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(done)",
      "Bash(for dir in competencies development_plans notifications engagement wellness compensation leave_attendance recruitment)",
      "Bash(for app in dashboard engagement wellness compensation leave_attendance recruitment)",
      "Bash(do if [ ! -f \"C:\\lahiyeler\\q360\\q360_project\\apps$app\\template_views.py\" ])",
      "Bash(then echo \"MISSING: $app\")",
      "Bash(fi)",
      "Bash(do if [ ! -f \"C:\\lahiyeler\\q360\\q360_project\\apps$app\\forms.py\" ])",
      "Bash(then echo \"MISSING FORMS: $app\")",
      "Bash(for app in evaluations wellness compensation leave_attendance recruitment development_plans notifications)",
      "Bash(do if [ -f \"C:\\lahiyeler\\q360\\q360_project\\apps$app\\api_views.py\" ])",
      "Bash([ -f \"C:\\lahiyeler\\q360\\q360_project\\apps$app\\api.py\" ])",
      "Bash(then echo \"$app: HAS API\")",
      "Bash(else echo \"$app: NO API FILE\")",
      "Bash(Select-String -Pattern \"OK|FAILED|ERROR|Ran\")",
      "Bash(Select-String -Pattern \"✓|✅|ERROR|Traceback|Starting\" -Context 0,1)",
      "Bash(Select-String -Pattern \"requirements|pyproject|Pipfile\")",
      "Bash(Select-String -Pattern \"OK|FAILED|ERROR|Ran\" -Context 0,1)",
      "Bash(del bootstrap_fix.py)"
    ],
    "deny": [],
    "ask": []
  }
}
